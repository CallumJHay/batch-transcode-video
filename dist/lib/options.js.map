{"version":3,"sources":["../../lib/options.js"],"names":[],"mappings":"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","file":"options.js","sourcesContent":["import minimist from 'minimist';\nimport path from 'path';\nimport {splitter} from './util.js';\nlet curDir = process.cwd();\nlet defs = {\n  '--': true,\n  alias: {\n    input: 'i',\n    output: 'o',\n    mask: 'm',\n    help: 'h'\n  },\n  boolean: [\n    'debug', 'quiet', 'flatten', 'diff', 'help'\n  ],\n  string: [\n    'input', 'output', 'mask'\n  ],\n  default: {\n    // Input folder\n    input: curDir,\n    // Output folder\n    output: null,\n    // Search pattern for glob in input directory\n    mask: '**' + path.sep + '*.{mp4,avi,mkv,m4v,ts,mov}',\n    // Verbose logging\n    debug: false,\n    // Do not preserve relative directory structure in output directory\n    flatten: false,\n    // Log only writes, errors, and finish (success, failure) message\n    quiet: false,\n    // Only try to transcode videos that do not exist in the output directory\n    diff: false,\n    help: false\n  },\n  unknown: function (arg) {\n    let chalk = require('chalk');\n    let errMessage = [];\n    console.log(chalk.bgRed.gray.bold('ERROR') +\n        chalk.white.bold('\\tUnrecognized command ') +\n          chalk.yellow.bold(arg) + chalk.white.bold(' provided.'));\n    errMessage.push('If you would like to supply custom options to');\n    errMessage.push('transcode-video then put them at end of the command');\n    errMessage.push('after a double dash \"--\". For example to pass the ');\n    errMessage.push('\"--dry-run\" command to transcode-video:');\n    console.log(splitter(errMessage.join(' '), true, 60));\n    console.log(chalk.white.bold('batch-transcode-video --input my_videos/ -- --dry-run'));\n    process.exit(1);\n  }\n};\nlet argv          = minimist(process.argv.slice(2), defs);\nargv['input'] = path.resolve(curDir, argv['input']);\nargv['dry-run'] = argv['--'].length ? argv['--'].reduce(function (prev, cur) {\n  return prev || /^\\-\\-dry\\-run$/i.test(cur.trim());\n}, false) : false;\nlet destExtensionRegex = /^\\-{2}(mp4|m4v)$/i;\nargv['dest-ext'] = argv['--'].reduce(function (prev, cur) {\n  let curArg = cur.trim();\n  if (destExtensionRegex.test(curArg)) {\n    return curArg.match(destExtensionRegex)[1];\n  }\n  return prev;\n}, 'mkv');\n\nexport default argv;\n"]}