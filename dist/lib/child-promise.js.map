{"version":3,"sources":["../../lib/child-promise.js"],"names":[],"mappings":";;;;;kBAYwB,YAAY;;;;IAZxB,GAAG;;;;;;;;;;;;;;;;AAMf,SAAS,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE;AACjC,SAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE;AAC1C,WAAO,SAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;MAAC;GACnD,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CACf;;AAEc,SAAS,YAAY,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;AACzE,MAAI,IAAI,GAAG,EAAE;MAAE,IAAI,GAAG,EAAE,CAAC;AACzB,SAAO,sBAAY,UAAU,GAAG,EAAE,GAAG,EAAE;AACrC,QAAI,IAAI,GAAG;AACV,SAAG,EAAE,GAAG;KACT,CAAC;AACD,QAAI,KAAK,CAAC;;AAEV,QAAI,WAAW,GAAG,SAAS,WAAW,CAAC,IAAI,EAAE;AAC3C,UAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE;;;AAAC,AAG9B,UAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AAC7C,UAAI,UAxBF,UAAU,EAwBG,QAAQ,CAAC,EAAE;AACxB,gBAAQ,CAAC,IAAI,CAAC,CAAC;OAChB;KACF,CAAA;;AAED,QAAI,aAAa,GAAG,SAAS,aAAa,CAAC,IAAI,EAAE;AAC/C,UAAI,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;KACzB,CAAA;;AAED,QAAI,UAAU,GAAG,SAAS,UAAU,CAAC,GAAG,EAAE;AACxC,UAAI,CAAC,GAAG,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;AACzD,OAAC,CAAC,UAAU,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC;AACrC,OAAC,CAAC,IAAI,GAAG,IAAI,CAAC;AACd,SAAG,CAAC,CAAC,CAAC,CAAC;KACR,CAAA;;AAED,QAAI,YAAY,GAAG,SAAS,YAAY,CAAC,IAAI,EAAE;AAC7C,UAAI,IAAI,KAAK,CAAC,EAAE;AACd,kBAAU,CAAC,IAAI,CAAC,CAAC;OAClB,MAAM;AACL,WAAG,CAAC,IAAI,CAAC,CAAC;OACX;KACF,CAAA;;AAED,SAAK,GAAG,aA7CJ,OAAO;;AA+CP,uBAhDO,IAAI,EAgDN,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;;AAErC,uBAlDA,KAAK,EAkDC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;;AAE3B,SAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AACrC,SAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;AACvC,SAAK,CAAC,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AAChC,SAAK,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;GAC/B,CAAC,CAAC;CACJ,CAAC","file":"child-promise.js","sourcesContent":["import * as say from './say';\nimport {isFunction} from './util';\nimport Promise from 'promise';\nimport {spawn, exec} from 'child_process';\nimport {windows as isWindows} from './environment';\n\nfunction windowsCommand(cmd, args) {\n  return [cmd].concat(args.map(function (arg) {\n    return /^[^\\-]/.test(arg) ? '\"' + arg + '\"' : arg;\n  })).join(' ');\n}\n\nexport default function childPromise(cmd, args, file, dir, mute, callback) {\n  var buff = '', errs = '';\n  return new Promise(function (acc, rej) {\n    var opts = {\n     cwd: dir\n   };\n    var child;\n\n    var dataHandler = function dataHandler(data) {\n      data = data.toString().trim();\n      // Only keep the last packet of data to prevent large\n      // amount of output being saved in memory\n      buff = !/\\n/.test(data) ? buff + data : data;\n      if (isFunction(callback)) {\n        callback(data);\n      }\n    }\n\n    var stdErrHandler = function stdErrHandler(data) {\n      errs += data.toString();\n    }\n\n    var errHandler = function errHandler(err) {\n      var e = new Error('Child process encountered an error.');\n      e.additional = err.toString().trim();\n      e.file = file;\n      rej(e);\n    }\n\n    var closeHandler = function closeHandler(code) {\n      if (code !== 0) {\n        errHandler(errs);\n      } else {\n        acc(buff);\n      }\n    }\n\n    child = isWindows ?\n        // Use exec() and special escape syntax for Windows\n        exec(windowsCommand(cmd, args), opts) :\n        // Use spawn() and normal syntax for non-Windows\n        spawn(cmd, args, opts);\n\n    child.stdout.on('data', dataHandler);\n    child.stderr.on('data', stdErrHandler);\n    child.on('close', closeHandler);\n    child.on('error', errHandler);\n  });\n};\n"]}