{"version":3,"sources":["../index.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAY,OAAO,CAAC,MAAM,CAAC,CAAC;AACpC,IAAI,KAAK,GAAW,OAAO,CAAC,OAAO,CAAC,CAAC;AACrC,IAAI,SAAS,GAAO,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;AACjD,IAAI,IAAI,GAAY,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/C,IAAI,UAAU,GAAM,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAChD,IAAI,OAAO,GAAS,OAAO,CAAC,eAAe,CAAC,CAAC;AAC7C,IAAI,GAAG,GAAa,OAAO,CAAC,WAAW,CAAC,CAAC;AACzC,IAAI,YAAY,GAAI,OAAO,CAAC,qBAAqB,CAAC,CAAC;AACnD,IAAI,MAAM,GAAU,OAAO,CAAC,cAAc,CAAC,CAAC;AAC5C,IAAI,MAAM,GAAU,OAAO,CAAC,GAAG,EAAE,CAAC;;AAElC,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;AACnB,SAAO,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;AACrC,SAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB;;AAED,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,YAAY;AAC7B,MAAI,OAAO,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;AAC/B,KAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACxB,MAAI,CAAC,OAAO,CAAC,SAAS,EAAE;AACtB,WAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;GACvB;CACF,CAAC,CAAC;;AAEH,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAChF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC,CAAC;AAC/D,GAAG,CAAC,MAAM,CAAC,0CAA0C,EAAE,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAC/E,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CACpB,IAAI,CAAC,UAAU,KAAK,EAAE;AACrB,MAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACtB,QAAI,CAAC,GAAG,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;AACjE,KAAC,CAAC,IAAI,GAAG,WAAW,CAAC;AACrB,UAAM,CAAC,CAAC;GACT;AACD,KAAG,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC;AACrC,SAAO,UAAU,CAAC,KAAK,CAAC,CAAC;CAC1B,EAAE,UAAU,GAAG,EAAE;AAChB,GAAC,CAAC,IAAI,GAAG,WAAW,CAAC;AACrB,GAAC,CAAC,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC;AAC3B,GAAC,CAAC,OAAO,GAAG,yDAAyD,CAAC;AACtE,QAAM,GAAG,CAAC;CACX,CAAC,CACD,KAAK,CAAC,UAAU,GAAG,EAAE;AACpB,KAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;CACjB,CAAC,CACD,IAAI,CAAC,YAAY;AAChB,SAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB,CAAC,CAAC","file":"index.js","sourcesContent":["var path          = require('path');\nvar chalk         = require('chalk');\nvar denodeify     = require('promise').denodeify;\nvar glob          = denodeify(require('glob'));\nvar transcoder    = require('./lib/transcoder');\nvar options       = require('./lib/options');\nvar say           = require('./lib/say');\nvar childPromise  = require('./lib/child-promise');\nvar repeat        = require('./lib/repeat');\nvar curDir        = process.cwd();\n\nif (options['help']) {\n  console.log(require('./lib/help')());\n  process.exit(0);\n}\n\nprocess.on('exit', function () {\n  var summary = say.getSummary();\n  say.logSummary(summary);\n  if (!summary.isSuccess) {\n    process.reallyExit(1);\n  }\n});\n\nvar filePattern = path.normalize(options['input'] + path.sep + options['mask']);\nconsole.log(chalk.white.bold('- Starting batch operation...'));\nsay.notify('Scanning for media using search pattern.', say.DEBUG, filePattern);\nglob(filePattern, {})\n.then(function (files) {\n  if (files.length === 0) {\n    var e = new Error('No files found for search pattern provided.');\n    e.file = filePattern;\n    throw e;\n  }\n  say.notify._fileCount = files.length;\n  return transcoder(files);\n}, function (err) {\n  e.file = filePattern;\n  e.additional = err.message;\n  e.message = 'File system error encountered while scanning for media.';\n  throw err;\n})\n.catch(function (err) {\n  say.notify(err);\n})\n.then(function () {\n  process.exit(0);\n});\n"]}